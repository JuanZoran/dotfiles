keybinds clear-defaults=true {
     // locked {
     // }
     shared_except "normal" {
         bind "Ctrl a" { SwitchToMode "Normal"; }
     }
 
     shared_except "locked" {
         bind "Enter" "Esc" { SwitchToMode "Locked"; }
         // bind "Ctrl q" { Quit; }
         // bind "Alt [" { PreviousSwapLayout; }
         // bind "Alt ]" { NextSwapLayout; }
     }

     shared {
         bind "Alt i" { MoveFocus "Up"; }
         bind "Alt k" { MoveFocus "Down"; }
         bind "Alt j" { MoveFocusOrTab "Left"; }
         bind "Alt l" { MoveFocusOrTab "Right"; }
 
         bind "Alt u" { NewPane "Down";    }
         bind "Alt o" { NewPane "Right";   }
         bind "Alt n" { NewPane; }
 
         bind "Alt =" { Resize "Increase"; }
         bind "Alt -" { Resize "Decrease"; }
     }
 
     normal {
         bind "Ctrl a" { WriteChars ""; SwitchToMode "Locked"; }
 
         // INFO : Mode Switch
         bind "Ctrl p"     { SwitchToMode "Pane"; }
         bind "Ctrl r"     { SwitchToMode "Resize"; }
         bind "Ctrl x"     { SwitchToMode "Scroll"; }
         bind "Ctrl s" "s" { SwitchToMode "Session"; }
         bind "Ctrl t" "t" { SwitchToMode "Tab"; }
         bind "Ctrl m" "m" { SwitchToMode "Move"; }
 
         // INFO : Keybinding
 
             // INFO :Pane
         bind "u"   { NewPane "Down";   SwitchToMode "Locked";  }
         bind "o"   { NewPane "Right";  SwitchToMode "Locked";  }
         bind "I"   { MovePane "Up";    SwitchToMode "Locked";  }
         bind "K"   { MovePane "Down";  SwitchToMode "Locked";  }
         bind "J"   { MovePane "Left";  SwitchToMode "Locked";  }
         bind "L"   { MovePane "Right"; SwitchToMode "Locked";  }
         bind "d"   { CloseFocus;       SwitchToMode "Locked";  }
         bind "Tab" { MovePane;         SwitchToMode "Locked";  }
         bind "r" { SwitchToMode "RenamePane"; PaneNameInput 0; }
 
             // INFO :Tab
         bind "n"      { NewTab;          SwitchToMode "Locked";   }
         bind "Ctrl j" { GoToPreviousTab; SwitchToMode "Locked";   }
         bind "Ctrl l" { GoToNextTab;     SwitchToMode "Locked";   }
         bind "Ctrl r" { SwitchToMode "RenameTab"; TabNameInput 0; }
         bind "Space"  { NextSwapLayout; }
 
 
         bind "i" { MoveFocus "Up";        SwitchToMode "Locked"; }
         bind "k" { MoveFocus "Down";      SwitchToMode "Locked"; }
         bind "j" { MoveFocus "Left";      SwitchToMode "Locked"; }
         bind "l" { MoveFocus "Right";     SwitchToMode "Locked"; }
         bind "w" { ToggleFocusFullscreen; SwitchToMode "Locked"; }
 
         // bind "d" { Detach; }
         // uncomment this and adjust key if using copy_on_select=false
         // bind "Alt c" { Copy; }
     }

 
     pane {
         bind "u" { NewPane "Down";   }
         bind "o" { NewPane "Right";  }
         bind "I" { MovePane "Up";    }
         bind "K" { MovePane "Down";  }
         bind "J" { MovePane "Left";  }
         bind "L" { MovePane "Right"; }
         bind "d" { CloseFocus;       }
 
 
         bind "Space" { SwitchFocus; }
 
         bind "n" { ToggleFocusFullscreen; SwitchToMode "Normal"; }
         bind "z" { TogglePaneFrames; SwitchToMode "Normal"; }
 
         bind "w" { ToggleFloatingPanes;  }
         bind "e" { TogglePaneEmbedOrFloating;  }
         bind "r" { SwitchToMode "RenamePane"; PaneNameInput 0;}
     }

     move {
         bind "n" "Tab" { MovePane; }
         bind "N" { MovePaneBackwards; }
 
         bind "i"  { MovePane "Up"; }
         bind "k"  { MovePane "Down"; }
         bind "j"  { MovePane "Left"; }
         bind "l"  { MovePane "Right"; }
     }
 
     shared_among "normal" "tab" {
         bind "1" { GoToTab 1; SwitchToMode "Locked"; }
         bind "2" { GoToTab 2; SwitchToMode "Locked"; }
         bind "3" { GoToTab 3; SwitchToMode "Locked"; }
         bind "4" { GoToTab 4; SwitchToMode "Locked"; }
         bind "5" { GoToTab 5; SwitchToMode "Locked"; }
         bind "6" { GoToTab 6; SwitchToMode "Locked"; }
         bind "7" { GoToTab 7; SwitchToMode "Locked"; }
         bind "8" { GoToTab 8; SwitchToMode "Locked"; }
         bind "9" { GoToTab 9; SwitchToMode "Locked"; }
     }
 
     tab {
         bind "r" { SwitchToMode "RenameTab"; TabNameInput 0; }
         bind "j" "i" { GoToPreviousTab; }
         bind "l" "k" { GoToNextTab; }
 
         bind "Tab" { ToggleTab; }
         bind "d" { CloseTab;  SwitchToMode "Locked"; }
         bind "s" { ToggleActiveSyncTab; SwitchToMode "Locked"; }
     }
 
     resize {
         bind "i"  { Resize "Increase Up"; }
         bind "k"  { Resize "Increase Down"; }
         bind "j"  { Resize "Increase Left"; }
         bind "l"  { Resize "Increase Right"; }
 
         bind "I" { Resize "Decrease Up"; }
         bind "K" { Resize "Decrease Down"; }
         bind "J" { Resize "Decrease Left"; }
         bind "L" { Resize "Decrease Right"; }
 
         bind "=" { Resize "Increase"; }
         bind "-" { Resize "Decrease"; }
     }


     shared_among "scroll" "search" {
         bind "Ctrl c" { ScrollToBottom; SwitchToMode "Normal"; }
 
         bind "i" { ScrollUp; }
         bind "k" { ScrollDown; }
 
         bind "I" { HalfPageScrollUp; }
         bind "K" { HalfPageScrollDown; }
 
         bind "j" { PageScrollUp; }
         bind "l" { PageScrollDown; }
     }
 
     scroll {
         bind "e" { EditScrollback; SwitchToMode "Normal"; }
         bind "s" { SwitchToMode "EnterSearch"; SearchInput 0; }
 
         bind "Ctrl c" { ScrollToBottom; SwitchToMode "Normal"; }
         // uncomment this and adjust key if using copy_on_select=false
         // bind "Alt c" { Copy; }
     }
 
     search {
         bind "N" { Search "up"; }
         bind "n" { Search "down"; }
 
         bind "c" { SearchToggleOption "CaseSensitivity"; }
         bind "w" { SearchToggleOption "Wrap"; }
         bind "o" { SearchToggleOption "WholeWord"; }
     }
}

plugins {
    tab-bar { path "tab-bar"; }
    status-bar { path "status-bar"; }
    strider { path "strider"; }
    compact-bar { path "compact-bar"; }
}

// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// Options:
//   - detach (Default)
//   - quit
//
on_force_close "quit"

//  Send a request for a simplified ui (without arrow fonts) to plugins
//  Options:
//    - true
//    - false (Default)
//
// simplified_ui true

// Choose the path to the default shell that zellij will use for opening new panes
// Default: $SHELL
//
// default_shell "fish"

// Toggle between having pane frames around the panes
// Options:
//   - true (default)
//   - false
//
// pane_frames true

// Toggle between having Zellij lay out panes according to a predefined set of layouts whenever possible
// Options:
//   - true (default)
//   - false
//
// auto_layout true

// Define color themes for Zellij
// For more examples, see: https://github.com/zellij-org/zellij/tree/main/example/themes
// Once these themes are defined, one of them should to be selected in the "theme" section of this file
//
// Catppuccin Theme:
// https://github.com/catppuccin/catppuccin

// Choose the theme that is specified in the themes section.
// Default: default
//
theme "catppuccin-macchiato"

// The name of the default layout to load on startup
// Default: "default"
//
// default_layout "compact"

// Choose the mode that zellij uses when starting up.
// Default: normal
//
default_mode "locked"

// Toggle enabling the mouse mode.
// On certain configurations, or terminals this could
// potentially interfere with copying text.
// Options:
//   - true (default)
//   - false
//
mouse_mode false

// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// Valid values: positive integers
// Default value: 10000
//
// scroll_buffer_size 10000

// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
//
// copy_command "xclip -selection clipboard" // x11
// copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx
// copy_command "termux-api-cli"                     // osx

// Choose the destination for copied text
// Allows using the primary selection buffer (on x11/wayland) instead of the system clipboard.
// Does not apply when using copy_command.
// Options:
//   - system (default)
//   - primary
//
// copy_clipboard "primary"

// Enable or disable automatic copy (and clear) of selection when releasing mouse
// Default: true
//
// copy_on_select false

// Path to the default editor to use to edit pane scrollbuffer
// Default: $EDITOR or $VISUAL
//
// scrollback_editor "/usr/bin/vim"

// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// Default: false
//
// mirror_session true

// The folder in which Zellij will look for layouts
//
// layout_dir "/path/to/my/layout_dir"

// The folder in which Zellij will look for themes
//
// theme_dir "/path/to/my/theme_dir"
// If you'd like to override the default keybindings completely, be sure to change "keybinds" to "keybinds clear-defaults=true"
